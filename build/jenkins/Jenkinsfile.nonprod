pipeline {
  agent any
  parameters {
    choice(name: 'Task', choices: ['none', 'all', 'referralroles'], description: 'Select which HK task to deploy')
  }
  options {
    buildDiscarder(logRotator(daysToKeepStr: "7", numToKeepStr: "13"))
    disableConcurrentBuilds()
    parallelsAlwaysFailFast()
    timeout(time: 25, unit: "MINUTES")
  }
  environment {
    BUILD_DATE = sh(returnStdout: true, script: "date -u +'%Y-%m-%dT%H:%M:%S%z'").trim()
    PROFILE = "nonprod"
    ENVIRONMENT = "nonprod"
    TASK = "${params.Task}"
  }
  triggers { pollSCM("* * * * *") }
  stages {
    stage("Show Configuration") {
      steps {
        script { sh "make show-configuration" }
      }
    }

    stage("Build") {
      when { expression { params.Task != "none" } }
      steps {
        script { sh "make unit-test TASK=${params.Task}" }
        script { sh "make build TASK=${params.Task}" }
        script { sh "make push TASK=${params.Task}" }
      }
    }

    stage("Test") {
      when { expression { params.Task != "none" } }
      steps {
        script { sh "echo Running Tests..." }
      }
    }

    stage("Deploy") {
      when { expression { params.Task != "none" } }
      steps {
        script { sh "make provision TASK=${params.Task} | tee /tmp/terraform_changes.txt" }
      }
    }

    stage("Deployment Summary") {
      when { expression { params.Task != "none" } }
      steps {
        script { sh "make deployment-summary" }
      }
    }
  }
  post {
    always { sh "make pipeline-send-notification PIPELINE_NAME='UEC DoS Tasks HK (NonProd)' BUILD_STATUS=${currentBuild.currentResult}" }
    cleanup { sh "make clean" }
  }
}
